#!groovy
// Check host1 properties
properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
		stage("clearing old build") {
            steps {
                echo " ============== clearing old build =================="
                dir ('weather_dockerfile') {
					sh """
						rm -R weatherApp 
					"""
				}					
            }
        }
        stage("git clone project") {
            steps {
                echo " ============== git clone project =================="
                dir ('weather_dockerfile') {
					sh """
						git clone https://github.com/kiaev/weatherApp.git 
					"""
				}					
            }
        }
		stage('SonarQube analysis') {
			steps {
				echo " ============== git clone project =================="
                withCredentials([string(credentialsId: 'sonar.ProjectToken', variable: 'ProjectToken'),(credentialsId: 'sonar.ProjectKey', variable: 'ProjectKey')]) {
					sh """
						sudo docker run \
							--rm \
							-v "/var/lib/jenkins/workspace/weathetAppBuild/weather_dockerfile:/usr/src" \
							sonarsource/sonar-scanner-cli:4.6 \
							sonar-scanner \
							-Dsonar.projectKey='${ProjectKey}' \
							-Dsonar.sources=. \
							-Dsonar.host.url=http://192.168.31.88:9000 \
							-Dsonar.login='${ProjectToken}'
					"""
				
				}
			}
		}
        stage("create docker image") {
            steps {
                    echo "========= start buiding image ========="
                    dir ('weather_dockerfile') {
                        sh 'docker build -t mrfoxhound/weather-app:1.0.0 .'
                    }
            }
        }
		stage("docker login") {
            steps {
                echo " ============== docker login =================="
                withCredentials([usernamePassword(credentialsId: 'dockerHub_kiaev', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    sh """
                    docker login -u $USERNAME -p $PASSWORD
                    """
                }
                
            }
        }
        stage("docker push") {
            steps {
                echo " ============== start pushing image =================="
                sh '''
                docker push mrfoxhound/weather-app:1.0.0
                '''
            }
        }
    }
}
